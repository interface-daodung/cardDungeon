// Void.js - Th·∫ª void kh√¥ng c√≥ t√°c d·ª•ng
// Ch·ª©c nƒÉng: Th·∫ª tr·ªëng kh√¥ng c√≥ t√°c d·ª•ng g√¨, ch·ªâ ƒë∆∞·ª£c t·∫°o b·ªüi h√†m c·ª• th·ªÉ

class Void extends Card {
    constructor() {
        super(
            "Tr·ªëng", 
            "coin", // Ph√¢n lo·∫°i l√† coin nh∆∞ng kh√¥ng c·ªông ƒëi·ªÉm
            "resources/void.webp", 
            "Th·∫ª tr·ªëng kh√¥ng c√≥ t√°c d·ª•ng"
        );
        this.score = 0; // Kh√¥ng c·ªông ƒëi·ªÉm
    }

    /**
     * Hi·ªáu ·ª©ng khi th·∫ª b·ªã ƒÉn (kh√¥ng c√≥ t√°c d·ª•ng g√¨)
     * @param {CharacterManager} characterManager - Manager qu·∫£n l√Ω character
     * @param {GameState} gameState - Manager qu·∫£n l√Ω game state
     * @param {CardManager} cardManager - Manager qu·∫£n l√Ω th·∫ª
     * @returns {Object} Th√¥ng tin k·∫øt qu·∫£
     */
    cardEffect(characterManager, gameState, cardManager) {
        console.log(`üï≥Ô∏è Void.cardEffect: Th·∫ª tr·ªëng kh√¥ng c√≥ t√°c d·ª•ng`);
        
        const result = {
            score: 0, // Kh√¥ng c·ªông ƒëi·ªÉm
            type: this.type,
            effect: `Th·∫ª tr·ªëng kh√¥ng c√≥ t√°c d·ª•ng`
        };
        
        console.log(`üï≥Ô∏è Void.cardEffect: K·∫øt qu·∫£:`, result);
        return result;
    }

    /**
     * L·∫•y th√¥ng tin hi·ªÉn th·ªã cho dialog
     * @returns {Object} Th√¥ng tin ƒë·ªÉ hi·ªÉn th·ªã
     */
    getDisplayInfo() {
        const baseInfo = super.getDisplayInfo();
        return {
            ...baseInfo,
            description: `Th·∫ª tr·ªëng kh√¥ng c√≥ t√°c d·ª•ng - Kh√¥ng c·ªông ƒëi·ªÉm`,
            score: 0
        };
    }
} 